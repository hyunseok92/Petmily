/* 시설 */
CREATE TABLE DEPARTMENT (
	DEPT_SEQ NUMBER NOT NULL, /* DEPT_SEQ */
	DEPT_TYPE VARCHAR2(20) NOT NULL, /* DEPT_TYPE */
	DEPT_NAME VARCHAR2(50) NOT NULL, /* DEPT_NAME */
	DEPT_ADDRESS VARCHAR2(255) NOT NULL, /* DEPT_ADDRESS */
	DEPT_PHONE VARCHAR2(30), /* DEPT_PHONE */
	DEPT_LATITUDE VARCHAR2(20), /* DEPT_LATITUDE */
	DEPT_LONGITUDE VARCHAR2(20), /* DEPT_LONGITUDE */
	DEPT_TIME VARCHAR2(30), /* DEPT_TIME */
	DEPT_PARKING VARCHAR2(1) NOT NULL, /* DEPT_PARKING */
	DEPT_ENTRANCE_FEE VARCHAR2(1) NOT NULL, /* DEPT_ENTRANCE_FEE */
	DEPT_SIZERESTRICT VARCHAR2(15), /* DEPT_SIZERESTRICT */
	DEPT_RESTRICT VARCHAR2(255), /* DEPT_RESTRICT */
	DEPT_WITHPETFEE VARCHAR2(1) NOT NULL, /* DEPT_WITHPETFEE */
	DEPT_URL VARCHAR2(255), /* DEPT_URL */
	DEPT_PIC VARCHAR2(1000) /* DEPT_PIC */
);

COMMENT ON TABLE DEPARTMENT IS '시설';

COMMENT ON COLUMN DEPARTMENT.DEPT_SEQ IS 'DEPT_SEQ';

COMMENT ON COLUMN DEPARTMENT.DEPT_TYPE IS '의료=1,미용=2,용품=3,위탁=4,장묘=5,카페,식당=6,펜션/호텔=7,여행/문화=8';

COMMENT ON COLUMN DEPARTMENT.DEPT_NAME IS 'DEPT_NAME';

COMMENT ON COLUMN DEPARTMENT.DEPT_ADDRESS IS 'DEPT_ADDRESS';

COMMENT ON COLUMN DEPARTMENT.DEPT_PHONE IS 'DEPT_PHONE';

COMMENT ON COLUMN DEPARTMENT.DEPT_LATITUDE IS 'DEPT_LATITUDE';

COMMENT ON COLUMN DEPARTMENT.DEPT_LONGITUDE IS 'DEPT_LONGITUDE';

COMMENT ON COLUMN DEPARTMENT.DEPT_TIME IS 'DEPT_TIME';

COMMENT ON COLUMN DEPARTMENT.DEPT_PARKING IS '주차가능=0,불가=1';

COMMENT ON COLUMN DEPARTMENT.DEPT_ENTRANCE_FEE IS '입장료있음=0,없음=1';

COMMENT ON COLUMN DEPARTMENT.DEPT_SIZERESTRICT IS '없음=0,소형=1,중형=2,대형=3';

COMMENT ON COLUMN DEPARTMENT.DEPT_RESTRICT IS '제한사항있음=0,없음=1';

COMMENT ON COLUMN DEPARTMENT.DEPT_WITHPETFEE IS 'DEPT_WITHPETFEE';

COMMENT ON COLUMN DEPARTMENT.DEPT_URL IS 'DEPT_URL';

COMMENT ON COLUMN DEPARTMENT.DEPT_PIC IS 'DEPT_PIC';

COMMENT ON COLUMN DEPARTMENT.DEPT_INSERT_OK IS '삽입 해야하는 애들 N';


CREATE UNIQUE INDEX PK_DEPARTMENT
	ON DEPARTMENT (
		DEPT_SEQ ASC
	);

CREATE UNIQUE INDEX UIX_DEPARTMENT
	ON DEPARTMENT (
		DEPT_ADDRESS ASC
	);

ALTER TABLE DEPARTMENT
	ADD
		CONSTRAINT PK_DEPARTMENT
		PRIMARY KEY (
			DEPT_SEQ
		);

ALTER TABLE DEPARTMENT
	ADD
		CONSTRAINT UK_DEPARTMENT
		UNIQUE (
			DEPT_ADDRESS
		);

/* 회원정보 */
CREATE TABLE MEMBER (
	MEMBER_SEQ NUMBER NOT NULL, /* MEMBER_SEQ */
	MEMBER_ID VARCHAR2(20) NOT NULL, /* MEMBER_ID */
	MEMBER_PWD VARCHAR2(30), /* MEMBER_PWD */
	MEMBER_EMAIL VARCHAR2(30) NOT NULL, /* MEMBER_EMAIL */
	MEMBER_NICK VARCHAR2(20) NOT NULL, /* MEMBER_NICK */
	MEMBER_GRADE VARCHAR2(1) NOT NULL /* MEMBER_GRADE */
);

COMMENT ON TABLE MEMBER IS '회원정보';

COMMENT ON COLUMN MEMBER.MEMBER_SEQ IS 'MEMBER_SEQ';

COMMENT ON COLUMN MEMBER.MEMBER_ID IS 'MEMBER_ID';

COMMENT ON COLUMN MEMBER.MEMBER_PWD IS 'MEMBER_PWD';

COMMENT ON COLUMN MEMBER.MEMBER_EMAIL IS 'MEMBER_EMAIL';

COMMENT ON COLUMN MEMBER.MEMBER_NICK IS 'MEMBER_NICK';

COMMENT ON COLUMN MEMBER.MEMBER_GRADE IS 'MEMBER_GRADE';

CREATE UNIQUE INDEX PK_MEMBER
	ON MEMBER (
		MEMBER_SEQ ASC
	);

CREATE UNIQUE INDEX UIX_MEMBER
	ON MEMBER (
		MEMBER_PWD ASC,
		MEMBER_EMAIL ASC
	);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			MEMBER_SEQ
		);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT UK_MEMBER
		UNIQUE (
			MEMBER_PWD,
			MEMBER_EMAIL
		);

/* 펫정보 */
CREATE TABLE PET (
	PET_SEQ NUMBER NOT NULL, /* PET_SEQ */
	MEMBER_SEQ NUMBER NOT NULL, /* MEMBER_SEQ */
	PET_NAME VARCHAR2(15) NOT NULL, /* PET_NAME */
	PET_TYPE VARCHAR2(1) NOT NULL, /* PET_TYPE */
	PET_SIZE VARCHAR2(15) NOT NULL, /* PET_SIZE */
	PET_IMG VARCHAR2(255) /* PET_IMG */
);

COMMENT ON TABLE PET IS '펫정보';

COMMENT ON COLUMN PET.PET_SEQ IS 'PET_SEQ';

COMMENT ON COLUMN PET.MEMBER_SEQ IS 'MEMBER_SEQ';

COMMENT ON COLUMN PET.PET_NAME IS 'PET_NAME';

COMMENT ON COLUMN PET.PET_TYPE IS '0=고양이, 1=강아지, 2=기타';

COMMENT ON COLUMN PET.PET_SIZE IS '소형, 중형, 대형';

COMMENT ON COLUMN PET.PET_IMG IS 'PET_IMG';

CREATE UNIQUE INDEX PK_PET
	ON PET (
		PET_SEQ ASC,
		MEMBER_SEQ ASC
	);

ALTER TABLE PET
	ADD
		CONSTRAINT PK_PET
		PRIMARY KEY (
			PET_SEQ,
			MEMBER_SEQ
		);

/* 고객센터 */
CREATE TABLE SERV_CENTER (
	SERV_SEQ NUMBER NOT NULL, /* SERV_SEQ */
	MEMBER_SEQ NUMBER NOT NULL, /* MEMBER_SEQ */
	TITLE VARCHAR2(30) NOT NULL, /* TITLE */
	CONTENT VARCHAR2(2000) NOT NULL, /* CONTENT */
	UPLOAD_DATE DATE NOT NULL, /* UPLOAD_DATE */
	RESULT VARCHAR2(10) NOT NULL /* RESULT */
);

COMMENT ON TABLE SERV_CENTER IS '고객센터';

COMMENT ON COLUMN SERV_CENTER.SERV_SEQ IS 'SERV_SEQ';

COMMENT ON COLUMN SERV_CENTER.MEMBER_SEQ IS 'MEMBER_SEQ';

COMMENT ON COLUMN SERV_CENTER.TITLE IS 'TITLE';

COMMENT ON COLUMN SERV_CENTER.CONTENT IS 'CONTENT';

COMMENT ON COLUMN SERV_CENTER.UPLOAD_DATE IS 'UPLOAD_DATE';

COMMENT ON COLUMN SERV_CENTER.RESULT IS 'RESULT';

CREATE UNIQUE INDEX PK_SERV_CENTER
	ON SERV_CENTER (
		SERV_SEQ ASC
	);

ALTER TABLE SERV_CENTER
	ADD
		CONSTRAINT PK_SERV_CENTER
		PRIMARY KEY (
			SERV_SEQ
		);

/* 채팅 */
CREATE TABLE CHAT (
	CHAT_SEQ NUMBER NOT NULL, /* CHAT_SEQ */
	MEMBER_SEQ NUMBER NOT NULL, /* MEMBER_SEQ */
	OTHER_ID NUMBER NOT NULL /* OTHER_ID */
);

COMMENT ON TABLE CHAT IS '채팅';

COMMENT ON COLUMN CHAT.CHAT_SEQ IS 'CHAT_SEQ';

COMMENT ON COLUMN CHAT.MEMBER_SEQ IS 'MEMBER_SEQ';

COMMENT ON COLUMN CHAT.OTHER_ID IS 'OTHER_ID';

CREATE UNIQUE INDEX PK_CHAT
	ON CHAT (
		CHAT_SEQ ASC
	);

ALTER TABLE CHAT
	ADD
		CONSTRAINT PK_CHAT
		PRIMARY KEY (
			CHAT_SEQ
		);

/* 일반게시판좋아요 */
CREATE TABLE STANDARD_LIKE (
	POST_SEQ NUMBER NOT NULL, /* POST_SEQ */
	MEMBER_SEQ NUMBER NOT NULL /* MEMBER_SEQ */
);

COMMENT ON TABLE STANDARD_LIKE IS '일반게시판좋아요';

COMMENT ON COLUMN STANDARD_LIKE.POST_SEQ IS 'POST_SEQ';

COMMENT ON COLUMN STANDARD_LIKE.MEMBER_SEQ IS 'MEMBER_SEQ';

CREATE UNIQUE INDEX PK_STANDARD_LIKE
	ON STANDARD_LIKE (
		POST_SEQ ASC
	);

ALTER TABLE STANDARD_LIKE
	ADD
		CONSTRAINT PK_STANDARD_LIKE
		PRIMARY KEY (
			POST_SEQ
		);

/* 일반게시판댓글 */
CREATE TABLE STANDARD_REPLY (
	REPLY_SEQ NUMBER NOT NULL, /* REPLY_SEQ */
	POST_SEQ NUMBER NOT NULL, /* POST_SEQ */
	MEMBER_SEQ NUMBER NOT NULL, /* MEMBER_SEQ */
	REPLY_CONTENT VARCHAR2(300) NOT NULL, /* REPLY_CONTENT */
	REPLY_DATE DATE NOT NULL /* REPLY_DATE */
);

COMMENT ON TABLE STANDARD_REPLY IS '일반게시판댓글';

COMMENT ON COLUMN STANDARD_REPLY.REPLY_SEQ IS 'REPLY_SEQ';

COMMENT ON COLUMN STANDARD_REPLY.POST_SEQ IS 'POST_SEQ';

COMMENT ON COLUMN STANDARD_REPLY.MEMBER_SEQ IS 'MEMBER_SEQ';

COMMENT ON COLUMN STANDARD_REPLY.REPLY_CONTENT IS 'REPLY_CONTENT';

COMMENT ON COLUMN STANDARD_REPLY.REPLY_DATE IS 'REPLY_DATE';

CREATE UNIQUE INDEX PK_STANDARD_REPLY
	ON STANDARD_REPLY (
		REPLY_SEQ ASC
	);

ALTER TABLE STANDARD_REPLY
	ADD
		CONSTRAINT PK_STANDARD_REPLY
		PRIMARY KEY (
			REPLY_SEQ
		);

/* 일반게시판 */
CREATE TABLE STANDARD_POST (
	POST_SEQ NUMBER NOT NULL, /* POST_SEQ */
	MEMBER_SEQ NUMBER NOT NULL, /* MEMBER_SEQ */
	POST_CONTENT VARCHAR2(1000) NOT NULL, /* POST_CONTENT */
	POST_IMG VARCHAR2(1000), /* POST_IMG */
	LIKE_NO NUMBER NOT NULL, /* LIKE_NO */
	REPLY_NO NUMBER NOT NULL, /* REPLY_NO */
	POST_DATE DATE NOT NULL, /* POST_DATE */
	LAST_MODIFIED_DATE DATE NOT NULL /* LAST_MODIFIED_DATE */
);

COMMENT ON TABLE STANDARD_POST IS '일반게시판';

COMMENT ON COLUMN STANDARD_POST.POST_SEQ IS 'POST_SEQ';

COMMENT ON COLUMN STANDARD_POST.MEMBER_SEQ IS 'MEMBER_SEQ';

COMMENT ON COLUMN STANDARD_POST.POST_CONTENT IS 'POST_CONTENT';

COMMENT ON COLUMN STANDARD_POST.POST_IMG IS 'POST_IMG';

COMMENT ON COLUMN STANDARD_POST.LIKE_NO IS 'LIKE_NO';

COMMENT ON COLUMN STANDARD_POST.REPLY_NO IS 'REPLY_NO';

COMMENT ON COLUMN STANDARD_POST.POST_DATE IS 'POST_DATE';

COMMENT ON COLUMN STANDARD_POST.LAST_MODIFIED_DATE IS 'LAST_MODIFIED_DATE';

CREATE UNIQUE INDEX PK_STANDARD_POST
	ON STANDARD_POST (
		POST_SEQ ASC
	);

ALTER TABLE STANDARD_POST
	ADD
		CONSTRAINT PK_STANDARD_POST
		PRIMARY KEY (
			POST_SEQ
		);

/* 거래게시판 */
CREATE TABLE TRADE_POST (
	POST_SEQ NUMBER NOT NULL, /* POST_SEQ */
	MEMBER_SEQ NUMBER NOT NULL, /* MEMBER_SEQ */
	POST_CONTENT VARCHAR2(1000) NOT NULL, /* POST_CONTENT */
	POST_IMG VARCHAR2(1000), /* POST_IMG */
	LIKE_NO NUMBER NOT NULL, /* LIKE_NO */
	REPLY_NO NUMBER NOT NULL, /* REPLY_NO */
	POST_DATE DATE NOT NULL, /* POST_DATE */
	LAST_MODIFIED_DATE DATE NOT NULL, /* LAST_MODIFIED_DATE */
	TRADE_RESULT VARCHAR2(1) NOT NULL /* TRADE_RESULT */
);

COMMENT ON TABLE TRADE_POST IS '거래게시판';

COMMENT ON COLUMN TRADE_POST.POST_SEQ IS 'POST_SEQ';

COMMENT ON COLUMN TRADE_POST.MEMBER_SEQ IS 'MEMBER_SEQ';

COMMENT ON COLUMN TRADE_POST.POST_CONTENT IS 'POST_CONTENT';

COMMENT ON COLUMN TRADE_POST.POST_IMG IS 'POST_IMG';

COMMENT ON COLUMN TRADE_POST.LIKE_NO IS 'LIKE_NO';

COMMENT ON COLUMN TRADE_POST.REPLY_NO IS 'REPLY_NO';

COMMENT ON COLUMN TRADE_POST.POST_DATE IS 'POST_DATE';

COMMENT ON COLUMN TRADE_POST.LAST_MODIFIED_DATE IS 'LAST_MODIFIED_DATE';

COMMENT ON COLUMN TRADE_POST.TRADE_RESULT IS 'TRADE_RESULT';

CREATE UNIQUE INDEX PK_TRADE_POST
	ON TRADE_POST (
		POST_SEQ ASC
	);

ALTER TABLE TRADE_POST
	ADD
		CONSTRAINT PK_TRADE_POST
		PRIMARY KEY (
			POST_SEQ
		);

/* 거래게시판댓글 */
CREATE TABLE TRADE_REPLY (
	REPLY_SEQ NUMBER NOT NULL, /* REPLY_SEQ */
	POST_SEQ NUMBER NOT NULL, /* POST_SEQ */
	MEMBER_SEQ NUMBER NOT NULL, /* MEMBER_SEQ */
	REPLY_CONTENT VARCHAR2(300) NOT NULL, /* REPLY_CONTENT */
	REPLY_DATE DATE NOT NULL /* REPLY_DATE */
);

COMMENT ON TABLE TRADE_REPLY IS '거래게시판댓글';

COMMENT ON COLUMN TRADE_REPLY.REPLY_SEQ IS 'REPLY_SEQ';

COMMENT ON COLUMN TRADE_REPLY.POST_SEQ IS 'POST_SEQ';

COMMENT ON COLUMN TRADE_REPLY.MEMBER_SEQ IS 'MEMBER_SEQ';

COMMENT ON COLUMN TRADE_REPLY.REPLY_CONTENT IS 'REPLY_CONTENT';

COMMENT ON COLUMN TRADE_REPLY.REPLY_DATE IS 'REPLY_DATE';

CREATE UNIQUE INDEX PK_TRADE_REPLY
	ON TRADE_REPLY (
		REPLY_SEQ ASC
	);

ALTER TABLE TRADE_REPLY
	ADD
		CONSTRAINT PK_TRADE_REPLY
		PRIMARY KEY (
			REPLY_SEQ
		);

/* 거래게시판좋아요 */
CREATE TABLE TRADE_LIKE (
	POST_SEQ NUMBER NOT NULL, /* POST_SEQ */
	MEMBER_SEQ NUMBER NOT NULL /* MEMBER_SEQ */
);

COMMENT ON TABLE TRADE_LIKE IS '거래게시판좋아요';

COMMENT ON COLUMN TRADE_LIKE.POST_SEQ IS 'POST_SEQ';

COMMENT ON COLUMN TRADE_LIKE.MEMBER_SEQ IS 'MEMBER_SEQ';

CREATE UNIQUE INDEX PK_TRADE_LIKE
	ON TRADE_LIKE (
		POST_SEQ ASC
	);

ALTER TABLE TRADE_LIKE
	ADD
		CONSTRAINT PK_TRADE_LIKE
		PRIMARY KEY (
			POST_SEQ
		);

ALTER TABLE PET
	ADD
		CONSTRAINT FK_MEMBER_TO_PET
		FOREIGN KEY (
			MEMBER_SEQ
		)
		REFERENCES MEMBER (
			MEMBER_SEQ
		);

ALTER TABLE SERV_CENTER
	ADD
		CONSTRAINT FK_MEMBER_TO_SERV_CENTER
		FOREIGN KEY (
			MEMBER_SEQ
		)
		REFERENCES MEMBER (
			MEMBER_SEQ
		);

ALTER TABLE CHAT
	ADD
		CONSTRAINT FK_MEMBER_TO_CHAT
		FOREIGN KEY (
			MEMBER_SEQ
		)
		REFERENCES MEMBER (
			MEMBER_SEQ
		);

ALTER TABLE STANDARD_LIKE
	ADD
		CONSTRAINT FK_STANDARD_POST_TO_STANDARD_LIKE
		FOREIGN KEY (
			POST_SEQ
		)
		REFERENCES STANDARD_POST (
			POST_SEQ
		);

ALTER TABLE STANDARD_LIKE
	ADD
		CONSTRAINT FK_MEMBER_TO_STANDARD_LIKE
		FOREIGN KEY (
			MEMBER_SEQ
		)
		REFERENCES MEMBER (
			MEMBER_SEQ
		);

ALTER TABLE STANDARD_REPLY
	ADD
		CONSTRAINT FK_STANDARD_POST_TO_STANDARD_REPLY
		FOREIGN KEY (
			POST_SEQ
		)
		REFERENCES STANDARD_POST (
			POST_SEQ
		);

ALTER TABLE STANDARD_REPLY
	ADD
		CONSTRAINT FK_MEMBER_TO_STANDARD_REPLY
		FOREIGN KEY (
			MEMBER_SEQ
		)
		REFERENCES MEMBER (
			MEMBER_SEQ
		);

ALTER TABLE STANDARD_POST
	ADD
		CONSTRAINT FK_MEMBER_TO_STANDARD_POST
		FOREIGN KEY (
			MEMBER_SEQ
		)
		REFERENCES MEMBER (
			MEMBER_SEQ
		);

ALTER TABLE TRADE_POST
	ADD
		CONSTRAINT FK_MEMBER_TO_TRADE_POST
		FOREIGN KEY (
			MEMBER_SEQ
		)
		REFERENCES MEMBER (
			MEMBER_SEQ
		);

ALTER TABLE TRADE_REPLY
	ADD
		CONSTRAINT FK_MEMBER_TO_TRADE_REPLY
		FOREIGN KEY (
			MEMBER_SEQ
		)
		REFERENCES MEMBER (
			MEMBER_SEQ
		);

ALTER TABLE TRADE_REPLY
	ADD
		CONSTRAINT FK_TRADE_POST_TO_TRADE_REPLY
		FOREIGN KEY (
			POST_SEQ
		)
		REFERENCES TRADE_POST (
			POST_SEQ
		);

ALTER TABLE TRADE_LIKE
	ADD
		CONSTRAINT FK_TRADE_POST_TO_TRADE_LIKE
		FOREIGN KEY (
			POST_SEQ
		)
		REFERENCES TRADE_POST (
			POST_SEQ
		);

ALTER TABLE TRADE_LIKE
	ADD
		CONSTRAINT FK_MEMBER_TO_TRADE_LIKE
		FOREIGN KEY (
			MEMBER_SEQ
		)
		REFERENCES MEMBER (
			MEMBER_SEQ
		);