/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-08-31 11:40:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class enrollPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/member/../common/footer.jsp", Long.valueOf(1693281980303L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Petmily</title>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("	src=\"/petmily/resources/js/common/jquery-3.7.0.min.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("@font-face {\r\n");
      out.write("	font-family: 'Surround';\r\n");
      out.write("	src: url('/petmily/resources/font/surround.woff2') format('woff2');\r\n");
      out.write("	font-weight: normal;\r\n");
      out.write("	font-style: normal;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("body {\r\n");
      out.write("      font-family: 'Surround', sans-serif;\r\n");
      out.write("      padding: 20px 50px;\r\n");
      out.write("font-size: 25px;\r\n");
      out.write("font-weight: 900;\r\n");
      out.write("color: hsl(30.5, 77.6%, 29.8%);\r\n");
      out.write("    }\r\n");
      out.write("body h1 a {\r\n");
      out.write("      font-family: 'Surround', sans-serif;\r\n");
      out.write("      padding: 20px 50px;\r\n");
      out.write("font-size: 35px;\r\n");
      out.write("font-weight: 900;\r\n");
      out.write("border: none;\r\n");
      out.write("color: hsl(30.46deg 58.9% 45.68%);\r\n");
      out.write("text-decoration: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("form {\r\n");
      out.write("	text-align: center; /* form 요소 내부의 내용을 가운데 정렬 */\r\n");
      out.write("	margin: 0 auto; /* 가운데 정렬을 위한 외부 여백 조정 */\r\n");
      out.write("	width: 350px; /* 폼의 너비 설정 */\r\n");
      out.write("	height: auto;\r\n");
      out.write("		background-color: #FFE4B5;\r\n");
      out.write("	border: 3px solid hsl(30.5, 77.6%, 29.8%);\r\n");
      out.write("	border-radius: 15px;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td input:not(#checkpassword) {\r\n");
      out.write("	width: 250px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	border-radius: 7px;\r\n");
      out.write("    background-color: beige;\r\n");
      out.write("	/* display: flex;\r\n");
      out.write("justify-content: space-between; */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td input#dupcheck {\r\n");
      out.write("      font-family: 'Surround', sans-serif;\r\n");
      out.write("	width: 80px;\r\n");
      out.write("	height: 34px;\r\n");
      out.write("	border-radius: 7px;\r\n");
      out.write("	color: hsl(30.5, 77.6%, 29.8%);\r\n");
      out.write("    background-color: hsl(36deg 70.37% 68.61%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td input#dupcheck2 {\r\n");
      out.write("      font-family: 'Surround', sans-serif;\r\n");
      out.write("	width: 80px;\r\n");
      out.write("	height: 34px;\r\n");
      out.write("	border-radius: 7px;\r\n");
      out.write("	color: hsl(30.5, 77.6%, 29.8%);\r\n");
      out.write("    background-color: hsl(36deg 70.37% 68.61%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("hr {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=submit] {\r\n");
      out.write("      font-family: 'Surround', sans-serif;\r\n");
      out.write("	width: 340px;\r\n");
      out.write("	height: 34px;\r\n");
      out.write("	border-radius: 7px;\r\n");
      out.write("	margin-right: 3px;\r\n");
      out.write("	color: hsl(30.5, 77.6%, 29.8%);\r\n");
      out.write("    background-color: hsl(36deg 70.37% 68.61%);\r\n");
      out.write("}\r\n");
      out.write("/*      ::placeholder {\r\n");
      out.write("      color: red; /* 힌트 텍스트의 색상을 빨간색으로 설정 */\r\n");
      out.write("font-style\r\n");
      out.write(":\r\n");
      out.write(" \r\n");
      out.write("italic\r\n");
      out.write("; /* 힌트 텍스트의 글꼴을 기울임체로 설정 */\r\n");
      out.write("}*/\r\n");
      out.write(" input[type=password] {\r\n");
      out.write("	width: 400px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	border-radius: 7px;\r\n");
      out.write("    background-color: hsl(36deg 70.37% 68.61%);\r\n");
      out.write("	/* display: flex;\r\n");
      out.write("justify-content: space-between; */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#checkenroll {\r\n");
      out.write("	font-size: 10pt;\r\n");
      out.write("	width: auto;\r\n");
      out.write("	height: auto;\r\n");
      out.write("	border: none;\r\n");
      out.write("	margin: 0px;\r\n");
      out.write("	padding: 0px;\r\n");
      out.write("	white-space: pre-line;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	//버그 잡아[줘]\r\n");
      out.write("	var cbug = 1;\r\n");
      out.write("	//회원가입 페이지 입력값 가져오기\r\n");
      out.write("	window.onload = function() {\r\n");
      out.write("		var mid = document.getElementById('mid');\r\n");
      out.write("		var mpwd = document.getElementById('mpwd');\r\n");
      out.write("		var mpwd2 = document.getElementById('mpwd2');\r\n");
      out.write("		var notice = document.getElementById('checkenroll');\r\n");
      out.write("		var mnick = document.getElementById('mnick');\r\n");
      out.write("		var memail = document.getElementById('memail');\r\n");
      out.write("		//유효성검사를 위한 조건식 지정\r\n");
      out.write("		var cid = /^(?=.*[a-zA-Z0-9])[A-Za-z0-9]{8,12}$/;\r\n");
      out.write("		var cpwd = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$])[a-zA-Z\\d@!#$]{6,12}[a-zA-Z\\d@!#$]$/;\r\n");
      out.write("		var cnick = /^[A-Za-z0-9가-힣ㄱ-ㅎㅏ-ㅣ]{0,8}$/;\r\n");
      out.write("		var cemail = /^[A-Za-z0-9]+@[A-Za-z0-9]+\\.[A-Za-z0-9]{2,}$/;\r\n");
      out.write("		//키 입력시 유효성검사하는 이벤트 추가\r\n");
      out.write("		notice.hidden = true;\r\n");
      out.write("		mid.addEventListener('keyup', function() {\r\n");
      out.write("			cbug = 0;\r\n");
      out.write("			if (!cid.test(mid.value)) {\r\n");
      out.write("				notice.hidden = false;\r\n");
      out.write("				notice.style.color = '#ff6633';\r\n");
      out.write("			} else {\r\n");
      out.write("				notice.hidden = true;\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		mpwd.addEventListener('keyup',function() {\r\n");
      out.write("			cbug = 0;\r\n");
      out.write("							if (!cpwd.test(mpwd.value)) {\r\n");
      out.write("								notice.hidden = false;\r\n");
      out.write("								notice.textContent = '패스워드는 영어 대,소문자와 숫자를 포함하고,!@#$기호중 하나를 포함시켜 6~12글자로 사용해주세요.';\r\n");
      out.write("								notice.style.color = '#ff5151';\r\n");
      out.write("							} else {\r\n");
      out.write("								notice.hidden = true;\r\n");
      out.write("							}\r\n");
      out.write("						});\r\n");
      out.write("\r\n");
      out.write("		mpwd2.addEventListener('keyup', function() {\r\n");
      out.write("			cbug = 0;\r\n");
      out.write("			notice.hidden = false;\r\n");
      out.write("			if (mpwd.value === mpwd2.value) {\r\n");
      out.write("				/* notice.textContent = '유효한 패스워드입니다.'; */\r\n");
      out.write("				notice.hidden = true;\r\n");
      out.write("			} else {\r\n");
      out.write("				notice.textContent = '패스워드와 같은 값을 입력해주세요.';\r\n");
      out.write("				notice.style.color = '#ff5151';\r\n");
      out.write("				mpwd2.focus();\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		mnick.addEventListener('keyup', function() {\r\n");
      out.write("			cbug = 0;\r\n");
      out.write("			if (!cnick.test(mnick.value)) {\r\n");
      out.write("				notice.hidden = false;\r\n");
      out.write("				notice.textContent = '닉네임은 8자 이하로 작성해주세요.';\r\n");
      out.write("				notice.style.color = '#ff5151';\r\n");
      out.write("			} else {\r\n");
      out.write("				notice.hidden = true;\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		memail.addEventListener('keyup', function() {\r\n");
      out.write("			cbug = 0;\r\n");
      out.write("			if (!cemail.test(memail.value)) {\r\n");
      out.write("				notice.hidden = false;\r\n");
      out.write("				notice.textContent = '이메일은 test@enroll.com 형태로 작성해주세요.';\r\n");
      out.write("				notice.style.color = '#ff5151';\r\n");
      out.write("			} else {\r\n");
      out.write("				notice.hidden = true;\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	};\r\n");
      out.write("	//회원가입시 유효성 체크용 함수\r\n");
      out.write("	function validateCheck() {\r\n");
      out.write("		var mid = document.getElementById('mid');\r\n");
      out.write("		var mpwd = document.getElementById('mpwd');\r\n");
      out.write("		var mpwd2 = document.getElementById('mpwd2');\r\n");
      out.write("		var notice = document.getElementById('checkenroll');\r\n");
      out.write("		var mnick = document.getElementById('mnick');\r\n");
      out.write("		var memail = document.getElementById('memail');\r\n");
      out.write("		//유효성검사를 위한 조건식 지정\r\n");
      out.write("		var cid = /^(?=.*[a-zA-Z0-9])[A-Za-z0-9]{8,12}$/;\r\n");
      out.write("		var cpwd = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$])[a-zA-Z\\d@!#$]{6,12}[a-zA-Z\\d@!#$]$/;\r\n");
      out.write("		var cnick = /^[A-Za-z0-9가-힣ㄱ-ㅎㅏ-ㅣ]{0,8}$/;\r\n");
      out.write("		var cemail = /^[A-Za-z0-9]+@[A-Za-z0-9]+\\.[A-Za-z0-9]{2,}$/;\r\n");
      out.write("\r\n");
      out.write("		if (!cid.test(mid.value)) {\r\n");
      out.write("			alert(\"아이디는 영어 대소문자와 숫자를 포함해서 8~12글자로 작성해주세요.\");\r\n");
      out.write("			mid.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (!cpwd.test(mpwd.value)) {\r\n");
      out.write("			alert(\"패스워드는 영어 대,소문자와 숫자를 포함하고,!@#$기호중 하나를 포함시켜 6~12글자로 사용해주세요.\");\r\n");
      out.write("			mpwd.value = \"\";\r\n");
      out.write("			mpwd2.value = \"\";\r\n");
      out.write("			mpwd.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (!cnick.test(mnick.value)) {\r\n");
      out.write("			alert(\"닉네임은 8자 이하로 작성해주세요.\");\r\n");
      out.write("			mnick.value = \"\";\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (!cemail.test(memail.value)) {\r\n");
      out.write("			alert(\"이메일은 test@enroll.com 형태로 작성해주세요.\");\r\n");
      out.write("			memail.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(cbug === 1) {\r\n");
      out.write("		return true;\r\n");
      out.write("		} else {\r\n");
      out.write("		alert(\"아이디/이메일 중복확인 해주세요!\");\r\n");
      out.write("		return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	//아이디 중복검사용 Ajax 사용 함수\r\n");
      out.write("	function dupcheckId() {\r\n");
      out.write("		var mid = $('#mid').val();\r\n");
      out.write("		if (mid === \"\" || mid == null || mid.length === 0) {\r\n");
      out.write("		    alert(\"아이디를 입력해주세요.\");\r\n");
      out.write("		    return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		$.ajax({\r\n");
      out.write("		    type: \"POST\",\r\n");
      out.write("		    url: \"/petmily/dupid\",\r\n");
      out.write("		    data: { mid: mid },\r\n");
      out.write("		    success: function(response) {\r\n");
      out.write("		        alert(response);\r\n");
      out.write("		        var isDuplicate = (response === \"중복된 아이디입니다.\");\r\n");
      out.write("		        setSignupButtonState(isDuplicate);\r\n");
      out.write("		    },\r\n");
      out.write("		    error: function() {\r\n");
      out.write("		        alert(\"오류가 발생했습니다. 다시 시도해주세요.\");\r\n");
      out.write("		    }\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	//이메일 중복검사용 Ajax 사용 힘수\r\n");
      out.write("	function dupcheckemail() {\r\n");
      out.write("		var memail = $('#memail').val();\r\n");
      out.write("		if (memail === \"\" || memail == null || memail.length === 0) {\r\n");
      out.write("		    alert(\"이메일을 입력해주세요.\");\r\n");
      out.write("		    return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		$.ajax({\r\n");
      out.write("		    type: \"POST\",\r\n");
      out.write("		    url: \"/petmily/dupemail\",\r\n");
      out.write("		    data: { memail: memail },\r\n");
      out.write("		    success: function(response) {\r\n");
      out.write("		        alert(response);\r\n");
      out.write("		        var isDuplicate = (response === \"이미 가입된 이메일입니다.\");\r\n");
      out.write("		        setSignupButtonState(isDuplicate);\r\n");
      out.write("		    },\r\n");
      out.write("		    error: function() {\r\n");
      out.write("		        alert(\"오류가 발생했습니다. 다시 시도해주세요.\");\r\n");
      out.write("		    }\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("	// 아이디와 이메일 중복검사 이후 회원가입 버튼 처리\r\n");
      out.write("	function setSignupButtonState(isDuplicate) {\r\n");
      out.write("		var signupButton = document.getElementById('submit');\r\n");
      out.write("		  if (isDuplicate) {\r\n");
      out.write("		    signupButton.disabled = true; // 중복이면 버튼 비활성화\r\n");
      out.write("		    cbug = 0;\r\n");
      out.write("		  } else {\r\n");
      out.write("		    signupButton.disabled = false; // 중복이 아니면 버튼 활성화\r\n");
      out.write("		    cbug = 1;\r\n");
      out.write("		  }\r\n");
      out.write("		}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1 align=\"left\"><a href=\"/petmily/index.jsp\">Petmily</a></h1>\r\n");
      out.write("	<!-- 추후 include처리 -->\r\n");
      out.write("	<h2 align=\"center\">회원가입</h2>\r\n");
      out.write("	<!-- 추후 include처리 -->\r\n");
      out.write("	<form action=\"/petmily/enroll\" id=\"myForm\" onsubmit=\"return validateCheck();\">\r\n");
      out.write("		<table>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><input type=\"text\" id=\"mid\" name=\"mid\"\r\n");
      out.write("					placeholder=\"사용할 아이디 입력\" required></td>\r\n");
      out.write("				<td><input type=\"button\" value=\"중복확인\" id=\"dupcheck\" onclick=\"return dupcheckId();\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><input type=\"password\" id=\"mpwd\" name=\"mpwd\"\r\n");
      out.write("					placeholder=\"사용할 패스워드 입력\" required></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><input type=\"password\" id=\"mpwd2\" placeholder=\"패스워드 확인\"\r\n");
      out.write("					required></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><input type=\"text\" id=\"mnick\" name=\"mnick\"\r\n");
      out.write("					placeholder=\"사용할 닉네임 입력\" required>\r\n");
      out.write("				<!--  &nbsp;  &nbsp;  -->\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><input type=\"email\" id=\"memail\" name=\"memail\"\r\n");
      out.write("					placeholder=\"Email\" required>\r\n");
      out.write("				<!--  &nbsp;  &nbsp;  --></td>\r\n");
      out.write("				<td><input type=\"button\" value=\"중복확인\" id=\"dupcheck2\"\r\n");
      out.write("					onclick=\"dupcheckemail();\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\"><div id=\"checkenroll\" >아이디는 영어 대소문자와 숫자를 포함해서 8~12글자로 작성해주세요.</div></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		<input type=\"submit\" id=\"submit\"  value=\"가입하기\"> &nbsp;\r\n");
      out.write("	</form>\r\n");
      out.write("	<br>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
